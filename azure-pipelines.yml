trigger:
- main

resources:
- repo: self

variables:
  imageRepo: sampleapp
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'acr-service-connection-june'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
        tags: '$(tag)'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes/'
        artifact: 'manifests-aks'
        publishLocation: 'pipeline'
        
- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
    acrsecret: aks-acrsecreate01
    acrdevurl: 'acrregistry01.azurecr.io'
    replicaNo: 2
  jobs:
  - job: Deploy
    displayName: Deploy to AKS
    pool: 
      vmImage: ubuntu-latest
    steps:
      - task: DownloadBuildArtifacts@1
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'manifests-aks'
          downloadPath: '$(Pipeline.Workspace)/manifests'
              
      - task: KubernetesManifest@0
        inputs:
          action: 'createSecret'
          kubernetesServiceConnection: 'aks-service-connection-june'  # Corrected service connection name
          namespace: 'default'
          secretType: 'dockerRegistry'
          secretName: '$(acrsecret)'
          dockerRegistryEndpoint: 'acr-service-connection-june'
      
      - task: KubernetesManifest@0
        inputs:
          action: 'deploy'
          kubernetesServiceConnection: 'aks-service-connection-june'  # Corrected service connection name
          namespace: 'default'
          manifests: |
            $(Pipeline.Workspace)/manifests/deployment.yml
            $(Pipeline.Workspace)/manifests/service.yml
          containers: '$(acrdevurl)/$(imageRepo):$(tag)'
          imagePullSecrets: '$(acrsecret)'
